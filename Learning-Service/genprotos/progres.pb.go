// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: progres.proto

package genprotos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Maqsadlar Protobuf xabari
type Goal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                          // Maqsad ID'si
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                    // Foydalanuvchi ID'si
	LanguageCode string `protobuf:"bytes,3,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`  // Til kodi (masalan, 'fr', 'es', va hokazo)
	GoalType     string `protobuf:"bytes,4,opt,name=goal_type,json=goalType,proto3" json:"goal_type,omitempty"`              // Maqsad turi (masalan, 'daily_xp', 'weekly_lessons', va hokazo)
	TargetValue  int32  `protobuf:"varint,5,opt,name=target_value,json=targetValue,proto3" json:"target_value,omitempty"`    // Maqsad uchun kerakli qiymat
	CurrentValue int32  `protobuf:"varint,6,opt,name=current_value,json=currentValue,proto3" json:"current_value,omitempty"` // Hozirgi qiymat
	StartDate    string `protobuf:"bytes,7,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`           // Maqsad boshlanish sanasi
	EndDate      string `protobuf:"bytes,8,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`                 // Maqsad tugash sanasi
	CreatedAt    string `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`           // Maqsad yaratilgan sana
	UpdatedAt    string `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`          // Maqsad yangilangan sana
}

func (x *Goal) Reset() {
	*x = Goal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Goal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Goal) ProtoMessage() {}

func (x *Goal) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Goal.ProtoReflect.Descriptor instead.
func (*Goal) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{0}
}

func (x *Goal) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Goal) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Goal) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *Goal) GetGoalType() string {
	if x != nil {
		return x.GoalType
	}
	return ""
}

func (x *Goal) GetTargetValue() int32 {
	if x != nil {
		return x.TargetValue
	}
	return 0
}

func (x *Goal) GetCurrentValue() int32 {
	if x != nil {
		return x.CurrentValue
	}
	return 0
}

func (x *Goal) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *Goal) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *Goal) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Goal) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// Kunlik progress Protobuf xabari
type DailyProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                      // Kunlik progress ID'si
	UserId           string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                // Foydalanuvchi ID'si
	Date             string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`                                                  // Sana
	XpEarned         int32  `protobuf:"varint,4,opt,name=xp_earned,json=xpEarned,proto3" json:"xp_earned,omitempty"`                         // Kunlik XP miqdori
	LessonsCompleted int32  `protobuf:"varint,5,opt,name=lessons_completed,json=lessonsCompleted,proto3" json:"lessons_completed,omitempty"` // Bajarilgan darslar soni
	NewWordsLearned  int32  `protobuf:"varint,6,opt,name=new_words_learned,json=newWordsLearned,proto3" json:"new_words_learned,omitempty"`  // O'rganilgan yangi so'zlar soni
	MinutesPracticed int32  `protobuf:"varint,7,opt,name=minutes_practiced,json=minutesPracticed,proto3" json:"minutes_practiced,omitempty"` // Mashq qilingan daqiqalar
	StreakDays       int32  `protobuf:"varint,8,opt,name=streak_days,json=streakDays,proto3" json:"streak_days,omitempty"`                   // Kunlik davomiylik kunlari
	CreatedAt        string `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                       // Progress yaratilgan sana
}

func (x *DailyProgress) Reset() {
	*x = DailyProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyProgress) ProtoMessage() {}

func (x *DailyProgress) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyProgress.ProtoReflect.Descriptor instead.
func (*DailyProgress) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{1}
}

func (x *DailyProgress) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DailyProgress) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DailyProgress) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *DailyProgress) GetXpEarned() int32 {
	if x != nil {
		return x.XpEarned
	}
	return 0
}

func (x *DailyProgress) GetLessonsCompleted() int32 {
	if x != nil {
		return x.LessonsCompleted
	}
	return 0
}

func (x *DailyProgress) GetNewWordsLearned() int32 {
	if x != nil {
		return x.NewWordsLearned
	}
	return 0
}

func (x *DailyProgress) GetMinutesPracticed() int32 {
	if x != nil {
		return x.MinutesPracticed
	}
	return 0
}

func (x *DailyProgress) GetStreakDays() int32 {
	if x != nil {
		return x.StreakDays
	}
	return 0
}

func (x *DailyProgress) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// Haftalik progress Protobuf xabari
type WeeklyProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                       // Haftalik progress ID'si
	UserId                string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                 // Foydalanuvchi ID'si
	WeekStart             string `protobuf:"bytes,3,opt,name=week_start,json=weekStart,proto3" json:"week_start,omitempty"`                                        // Haftaning boshlanish sanasi
	WeekEnd               string `protobuf:"bytes,4,opt,name=week_end,json=weekEnd,proto3" json:"week_end,omitempty"`                                              // Haftaning tugash sanasi
	TotalXpEarned         int32  `protobuf:"varint,5,opt,name=total_xp_earned,json=totalXpEarned,proto3" json:"total_xp_earned,omitempty"`                         // Haftalik umumiy XP miqdori
	LessonsCompleted      int32  `protobuf:"varint,6,opt,name=lessons_completed,json=lessonsCompleted,proto3" json:"lessons_completed,omitempty"`                  // Bajarilgan darslar soni
	NewWordsLearned       int32  `protobuf:"varint,7,opt,name=new_words_learned,json=newWordsLearned,proto3" json:"new_words_learned,omitempty"`                   // O'rganilgan yangi so'zlar soni
	TotalMinutesPracticed int32  `protobuf:"varint,8,opt,name=total_minutes_practiced,json=totalMinutesPracticed,proto3" json:"total_minutes_practiced,omitempty"` // Mashq qilingan umumiy daqiqalar
	MostActiveDay         string `protobuf:"bytes,9,opt,name=most_active_day,json=mostActiveDay,proto3" json:"most_active_day,omitempty"`                          // Eng faol kun
	CreatedAt             string `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                       // Progress yaratilgan sana
}

func (x *WeeklyProgress) Reset() {
	*x = WeeklyProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeeklyProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeeklyProgress) ProtoMessage() {}

func (x *WeeklyProgress) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeeklyProgress.ProtoReflect.Descriptor instead.
func (*WeeklyProgress) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{2}
}

func (x *WeeklyProgress) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WeeklyProgress) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WeeklyProgress) GetWeekStart() string {
	if x != nil {
		return x.WeekStart
	}
	return ""
}

func (x *WeeklyProgress) GetWeekEnd() string {
	if x != nil {
		return x.WeekEnd
	}
	return ""
}

func (x *WeeklyProgress) GetTotalXpEarned() int32 {
	if x != nil {
		return x.TotalXpEarned
	}
	return 0
}

func (x *WeeklyProgress) GetLessonsCompleted() int32 {
	if x != nil {
		return x.LessonsCompleted
	}
	return 0
}

func (x *WeeklyProgress) GetNewWordsLearned() int32 {
	if x != nil {
		return x.NewWordsLearned
	}
	return 0
}

func (x *WeeklyProgress) GetTotalMinutesPracticed() int32 {
	if x != nil {
		return x.TotalMinutesPracticed
	}
	return 0
}

func (x *WeeklyProgress) GetMostActiveDay() string {
	if x != nil {
		return x.MostActiveDay
	}
	return ""
}

func (x *WeeklyProgress) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// Oylik progress Protobuf xabari
type MonthlyProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                       // Oylik progress ID'si
	UserId                string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                 // Foydalanuvchi ID'si
	Month                 string `protobuf:"bytes,3,opt,name=month,proto3" json:"month,omitempty"`                                                                 // Oy
	TotalXpEarned         int32  `protobuf:"varint,4,opt,name=total_xp_earned,json=totalXpEarned,proto3" json:"total_xp_earned,omitempty"`                         // Oylik umumiy XP miqdori
	LessonsCompleted      int32  `protobuf:"varint,5,opt,name=lessons_completed,json=lessonsCompleted,proto3" json:"lessons_completed,omitempty"`                  // Bajarilgan darslar soni
	NewWordsLearned       int32  `protobuf:"varint,6,opt,name=new_words_learned,json=newWordsLearned,proto3" json:"new_words_learned,omitempty"`                   // O'rganilgan yangi so'zlar soni
	TotalMinutesPracticed int32  `protobuf:"varint,7,opt,name=total_minutes_practiced,json=totalMinutesPracticed,proto3" json:"total_minutes_practiced,omitempty"` // Mashq qilingan umumiy daqiqalar
	MostImprovedSkill     string `protobuf:"bytes,8,opt,name=most_improved_skill,json=mostImprovedSkill,proto3" json:"most_improved_skill,omitempty"`              // Eng ko'p rivojlangan ko'nikma
	CreatedAt             string `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                        // Progress yaratilgan sana
}

func (x *MonthlyProgress) Reset() {
	*x = MonthlyProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthlyProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlyProgress) ProtoMessage() {}

func (x *MonthlyProgress) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlyProgress.ProtoReflect.Descriptor instead.
func (*MonthlyProgress) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{3}
}

func (x *MonthlyProgress) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MonthlyProgress) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MonthlyProgress) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *MonthlyProgress) GetTotalXpEarned() int32 {
	if x != nil {
		return x.TotalXpEarned
	}
	return 0
}

func (x *MonthlyProgress) GetLessonsCompleted() int32 {
	if x != nil {
		return x.LessonsCompleted
	}
	return 0
}

func (x *MonthlyProgress) GetNewWordsLearned() int32 {
	if x != nil {
		return x.NewWordsLearned
	}
	return 0
}

func (x *MonthlyProgress) GetTotalMinutesPracticed() int32 {
	if x != nil {
		return x.TotalMinutesPracticed
	}
	return 0
}

func (x *MonthlyProgress) GetMostImprovedSkill() string {
	if x != nil {
		return x.MostImprovedSkill
	}
	return ""
}

func (x *MonthlyProgress) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// Yutuqlar Protobuf xabari
type Achievement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                // Yutuq ID'si
	UserId      string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // Foydalanuvchi ID'si
	Title       string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                          // Yutuq nomi
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`              // Yutuq ta'rifi
	EarnedAt    string `protobuf:"bytes,5,opt,name=earned_at,json=earnedAt,proto3" json:"earned_at,omitempty"`    // Yutuq erishilgan sana
	CreatedAt   string `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // Yutuq yaratilgan sana
}

func (x *Achievement) Reset() {
	*x = Achievement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Achievement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Achievement) ProtoMessage() {}

func (x *Achievement) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Achievement.ProtoReflect.Descriptor instead.
func (*Achievement) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{4}
}

func (x *Achievement) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Achievement) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Achievement) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Achievement) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Achievement) GetEarnedAt() string {
	if x != nil {
		return x.EarnedAt
	}
	return ""
}

func (x *Achievement) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// Liderlar Protobuf xabari
type Leaderboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                         // Liderlar jadvali ID'si
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                   // Foydalanuvchi ID'si
	LanguageCode string `protobuf:"bytes,3,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"` // Til kodi
	Rank         int32  `protobuf:"varint,4,opt,name=rank,proto3" json:"rank,omitempty"`                                    // O'rin
	Xp           int32  `protobuf:"varint,5,opt,name=xp,proto3" json:"xp,omitempty"`                                        // XP miqdori
	Level        string `protobuf:"bytes,6,opt,name=level,proto3" json:"level,omitempty"`                                   // Daraja
	CreatedAt    string `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`          // Jadval yaratilgan sana
}

func (x *Leaderboard) Reset() {
	*x = Leaderboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Leaderboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Leaderboard) ProtoMessage() {}

func (x *Leaderboard) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Leaderboard.ProtoReflect.Descriptor instead.
func (*Leaderboard) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{5}
}

func (x *Leaderboard) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Leaderboard) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Leaderboard) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *Leaderboard) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Leaderboard) GetXp() int32 {
	if x != nil {
		return x.Xp
	}
	return 0
}

func (x *Leaderboard) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Leaderboard) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// Ko'nikmalar Protobuf xabari
type Skill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                   // Ko'nikma ID'si
	UserId              string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                             // Foydalanuvchi ID'si
	LanguageCode        string `protobuf:"bytes,3,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`                           // Til kodi
	Name                string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                                               // Ko'nikma nomi (masalan, 'Vocabulary', 'Grammar', 'Listening', va hokazo)
	Level               int32  `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`                                                            // Ko'nikma darajasi
	ProgressToNextLevel int32  `protobuf:"varint,6,opt,name=progress_to_next_level,json=progressToNextLevel,proto3" json:"progress_to_next_level,omitempty"` // Keyingi darajaga o'tish uchun progress
	WordsLearned        int32  `protobuf:"varint,7,opt,name=words_learned,json=wordsLearned,proto3" json:"words_learned,omitempty"`                          // O'rganilgan so'zlar soni
	RulesMastered       int32  `protobuf:"varint,8,opt,name=rules_mastered,json=rulesMastered,proto3" json:"rules_mastered,omitempty"`                       // Egallangan qoidalar soni
	ComprehensionRate   int32  `protobuf:"varint,9,opt,name=comprehension_rate,json=comprehensionRate,proto3" json:"comprehension_rate,omitempty"`           // Tinglab tushunish darajasi
	FluencyRate         int32  `protobuf:"varint,10,opt,name=fluency_rate,json=fluencyRate,proto3" json:"fluency_rate,omitempty"`                            // So'zlashuv ravonligi darajasi
	CreatedAt           string `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                   // Ko'nikma yaratilgan sana
}

func (x *Skill) Reset() {
	*x = Skill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Skill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Skill) ProtoMessage() {}

func (x *Skill) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Skill.ProtoReflect.Descriptor instead.
func (*Skill) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{6}
}

func (x *Skill) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Skill) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Skill) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *Skill) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Skill) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Skill) GetProgressToNextLevel() int32 {
	if x != nil {
		return x.ProgressToNextLevel
	}
	return 0
}

func (x *Skill) GetWordsLearned() int32 {
	if x != nil {
		return x.WordsLearned
	}
	return 0
}

func (x *Skill) GetRulesMastered() int32 {
	if x != nil {
		return x.RulesMastered
	}
	return 0
}

func (x *Skill) GetComprehensionRate() int32 {
	if x != nil {
		return x.ComprehensionRate
	}
	return 0
}

func (x *Skill) GetFluencyRate() int32 {
	if x != nil {
		return x.FluencyRate
	}
	return 0
}

func (x *Skill) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// Statistika Protobuf xabari
type Statistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                             // Statistika ID'si
	UserId                  string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                       // Foydalanuvchi ID'si
	LanguageCode            string `protobuf:"bytes,3,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`                                     // Til kodi
	TotalLearningTime       int32  `protobuf:"varint,4,opt,name=total_learning_time,json=totalLearningTime,proto3" json:"total_learning_time,omitempty"`                   // Umumiy o'qish vaqti (daqiqalarda)
	AverageDailyTime        int32  `protobuf:"varint,5,opt,name=average_daily_time,json=averageDailyTime,proto3" json:"average_daily_time,omitempty"`                      // O'rtacha kunlik o'qish vaqti (daqiqalarda)
	TotalLessonsCompleted   int32  `protobuf:"varint,6,opt,name=total_lessons_completed,json=totalLessonsCompleted,proto3" json:"total_lessons_completed,omitempty"`       // Bajarilgan umumiy darslar soni
	TotalExercisesCompleted int32  `protobuf:"varint,7,opt,name=total_exercises_completed,json=totalExercisesCompleted,proto3" json:"total_exercises_completed,omitempty"` // Bajarilgan umumiy mashqlar soni
	AccuracyRate            int32  `protobuf:"varint,8,opt,name=accuracy_rate,json=accuracyRate,proto3" json:"accuracy_rate,omitempty"`                                    // Aniqlik darajasi (%)
	MostChallengingSkill    string `protobuf:"bytes,9,opt,name=most_challenging_skill,json=mostChallengingSkill,proto3" json:"most_challenging_skill,omitempty"`           // Eng qiyin ko'nikma
	StrongestSkill          string `protobuf:"bytes,10,opt,name=strongest_skill,json=strongestSkill,proto3" json:"strongest_skill,omitempty"`                              // Eng kuchli ko'nikma
	CreatedAt               string `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                             // Statistika yaratilgan sana
}

func (x *Statistic) Reset() {
	*x = Statistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistic) ProtoMessage() {}

func (x *Statistic) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistic.ProtoReflect.Descriptor instead.
func (*Statistic) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{7}
}

func (x *Statistic) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Statistic) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Statistic) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *Statistic) GetTotalLearningTime() int32 {
	if x != nil {
		return x.TotalLearningTime
	}
	return 0
}

func (x *Statistic) GetAverageDailyTime() int32 {
	if x != nil {
		return x.AverageDailyTime
	}
	return 0
}

func (x *Statistic) GetTotalLessonsCompleted() int32 {
	if x != nil {
		return x.TotalLessonsCompleted
	}
	return 0
}

func (x *Statistic) GetTotalExercisesCompleted() int32 {
	if x != nil {
		return x.TotalExercisesCompleted
	}
	return 0
}

func (x *Statistic) GetAccuracyRate() int32 {
	if x != nil {
		return x.AccuracyRate
	}
	return 0
}

func (x *Statistic) GetMostChallengingSkill() string {
	if x != nil {
		return x.MostChallengingSkill
	}
	return ""
}

func (x *Statistic) GetStrongestSkill() string {
	if x != nil {
		return x.StrongestSkill
	}
	return ""
}

func (x *Statistic) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type GoalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goal *Goal `protobuf:"bytes,1,opt,name=goal,proto3" json:"goal,omitempty"`
}

func (x *GoalResponse) Reset() {
	*x = GoalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoalResponse) ProtoMessage() {}

func (x *GoalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoalResponse.ProtoReflect.Descriptor instead.
func (*GoalResponse) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{8}
}

func (x *GoalResponse) GetGoal() *Goal {
	if x != nil {
		return x.Goal
	}
	return nil
}

type UpdateGoalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoalId string `protobuf:"bytes,1,opt,name=goal_id,json=goalId,proto3" json:"goal_id,omitempty"`
	Goal   *Goal  `protobuf:"bytes,2,opt,name=goal,proto3" json:"goal,omitempty"`
}

func (x *UpdateGoalRequest) Reset() {
	*x = UpdateGoalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGoalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGoalRequest) ProtoMessage() {}

func (x *UpdateGoalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGoalRequest.ProtoReflect.Descriptor instead.
func (*UpdateGoalRequest) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateGoalRequest) GetGoalId() string {
	if x != nil {
		return x.GoalId
	}
	return ""
}

func (x *UpdateGoalRequest) GetGoal() *Goal {
	if x != nil {
		return x.Goal
	}
	return nil
}

type GetLanguageProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LanguageCode string `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
}

func (x *GetLanguageProgressRequest) Reset() {
	*x = GetLanguageProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLanguageProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguageProgressRequest) ProtoMessage() {}

func (x *GetLanguageProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguageProgressRequest.ProtoReflect.Descriptor instead.
func (*GetLanguageProgressRequest) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{10}
}

func (x *GetLanguageProgressRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetLanguageProgressRequest) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

type ProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DailyProgress   []*DailyProgress   `protobuf:"bytes,1,rep,name=daily_progress,json=dailyProgress,proto3" json:"daily_progress,omitempty"`
	WeeklyProgress  []*WeeklyProgress  `protobuf:"bytes,2,rep,name=weekly_progress,json=weeklyProgress,proto3" json:"weekly_progress,omitempty"`
	MonthlyProgress []*MonthlyProgress `protobuf:"bytes,3,rep,name=monthly_progress,json=monthlyProgress,proto3" json:"monthly_progress,omitempty"`
}

func (x *ProgressResponse) Reset() {
	*x = ProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressResponse) ProtoMessage() {}

func (x *ProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressResponse.ProtoReflect.Descriptor instead.
func (*ProgressResponse) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{11}
}

func (x *ProgressResponse) GetDailyProgress() []*DailyProgress {
	if x != nil {
		return x.DailyProgress
	}
	return nil
}

func (x *ProgressResponse) GetWeeklyProgress() []*WeeklyProgress {
	if x != nil {
		return x.WeeklyProgress
	}
	return nil
}

func (x *ProgressResponse) GetMonthlyProgress() []*MonthlyProgress {
	if x != nil {
		return x.MonthlyProgress
	}
	return nil
}

type GetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{12}
}

func (x *GetUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DailyProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress []*DailyProgress `protobuf:"bytes,1,rep,name=progress,proto3" json:"progress,omitempty"`
}

func (x *DailyProgressResponse) Reset() {
	*x = DailyProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyProgressResponse) ProtoMessage() {}

func (x *DailyProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyProgressResponse.ProtoReflect.Descriptor instead.
func (*DailyProgressResponse) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{13}
}

func (x *DailyProgressResponse) GetProgress() []*DailyProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

type WeeklyProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress []*WeeklyProgress `protobuf:"bytes,1,rep,name=progress,proto3" json:"progress,omitempty"`
}

func (x *WeeklyProgressResponse) Reset() {
	*x = WeeklyProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeeklyProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeeklyProgressResponse) ProtoMessage() {}

func (x *WeeklyProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeeklyProgressResponse.ProtoReflect.Descriptor instead.
func (*WeeklyProgressResponse) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{14}
}

func (x *WeeklyProgressResponse) GetProgress() []*WeeklyProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

type MonthlyProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress []*MonthlyProgress `protobuf:"bytes,1,rep,name=progress,proto3" json:"progress,omitempty"`
}

func (x *MonthlyProgressResponse) Reset() {
	*x = MonthlyProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthlyProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlyProgressResponse) ProtoMessage() {}

func (x *MonthlyProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlyProgressResponse.ProtoReflect.Descriptor instead.
func (*MonthlyProgressResponse) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{15}
}

func (x *MonthlyProgressResponse) GetProgress() []*MonthlyProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

type AchievementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Achievements []*Achievement `protobuf:"bytes,1,rep,name=achievements,proto3" json:"achievements,omitempty"`
}

func (x *AchievementsResponse) Reset() {
	*x = AchievementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AchievementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AchievementsResponse) ProtoMessage() {}

func (x *AchievementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AchievementsResponse.ProtoReflect.Descriptor instead.
func (*AchievementsResponse) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{16}
}

func (x *AchievementsResponse) GetAchievements() []*Achievement {
	if x != nil {
		return x.Achievements
	}
	return nil
}

type GetLeaderboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LanguageCode string `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
}

func (x *GetLeaderboardRequest) Reset() {
	*x = GetLeaderboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaderboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaderboardRequest) ProtoMessage() {}

func (x *GetLeaderboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaderboardRequest.ProtoReflect.Descriptor instead.
func (*GetLeaderboardRequest) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{17}
}

func (x *GetLeaderboardRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetLeaderboardRequest) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

type LeaderboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leaderboards []*Leaderboard `protobuf:"bytes,1,rep,name=leaderboards,proto3" json:"leaderboards,omitempty"`
}

func (x *LeaderboardResponse) Reset() {
	*x = LeaderboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardResponse) ProtoMessage() {}

func (x *LeaderboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardResponse.ProtoReflect.Descriptor instead.
func (*LeaderboardResponse) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{18}
}

func (x *LeaderboardResponse) GetLeaderboards() []*Leaderboard {
	if x != nil {
		return x.Leaderboards
	}
	return nil
}

type GetSkillsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LanguageCode string `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
}

func (x *GetSkillsRequest) Reset() {
	*x = GetSkillsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSkillsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSkillsRequest) ProtoMessage() {}

func (x *GetSkillsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSkillsRequest.ProtoReflect.Descriptor instead.
func (*GetSkillsRequest) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{19}
}

func (x *GetSkillsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetSkillsRequest) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

type SkillsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skills []*Skill `protobuf:"bytes,1,rep,name=skills,proto3" json:"skills,omitempty"`
}

func (x *SkillsResponse) Reset() {
	*x = SkillsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkillsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkillsResponse) ProtoMessage() {}

func (x *SkillsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkillsResponse.ProtoReflect.Descriptor instead.
func (*SkillsResponse) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{20}
}

func (x *SkillsResponse) GetSkills() []*Skill {
	if x != nil {
		return x.Skills
	}
	return nil
}

type GoalsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goals []*Goal `protobuf:"bytes,1,rep,name=goals,proto3" json:"goals,omitempty"`
}

func (x *GoalsResponse) Reset() {
	*x = GoalsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoalsResponse) ProtoMessage() {}

func (x *GoalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoalsResponse.ProtoReflect.Descriptor instead.
func (*GoalsResponse) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{21}
}

func (x *GoalsResponse) GetGoals() []*Goal {
	if x != nil {
		return x.Goals
	}
	return nil
}

type GetStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LanguageCode string `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
}

func (x *GetStatisticsRequest) Reset() {
	*x = GetStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatisticsRequest) ProtoMessage() {}

func (x *GetStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatisticsRequest.ProtoReflect.Descriptor instead.
func (*GetStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{22}
}

func (x *GetStatisticsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetStatisticsRequest) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

type StatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Statistics []*Statistic `protobuf:"bytes,1,rep,name=statistics,proto3" json:"statistics,omitempty"`
}

func (x *StatisticsResponse) Reset() {
	*x = StatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticsResponse) ProtoMessage() {}

func (x *StatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticsResponse.ProtoReflect.Descriptor instead.
func (*StatisticsResponse) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{23}
}

func (x *StatisticsResponse) GetStatistics() []*Statistic {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type DeleteGoalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoalId string `protobuf:"bytes,1,opt,name=goal_id,json=goalId,proto3" json:"goal_id,omitempty"`
}

func (x *DeleteGoalRequest) Reset() {
	*x = DeleteGoalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_progres_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGoalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGoalRequest) ProtoMessage() {}

func (x *DeleteGoalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_progres_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGoalRequest.ProtoReflect.Descriptor instead.
func (*DeleteGoalRequest) Descriptor() ([]byte, []int) {
	return file_progres_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteGoalRequest) GetGoalId() string {
	if x != nil {
		return x.GoalId
	}
	return ""
}

var File_progres_proto protoreflect.FileDescriptor

var file_progres_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0xb1, 0x02, 0x0a, 0x04, 0x47, 0x6f,
	0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xaf, 0x02,
	0x0a, 0x0d, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x78, 0x70, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x78, 0x70, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x65, 0x77, 0x5f, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x4c, 0x65, 0x61, 0x72, 0x6e,
	0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x70, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6d,
	0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x44, 0x61, 0x79, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xf3, 0x02, 0x0a, 0x0e, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x77,
	0x65, 0x65, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x77, 0x65, 0x65, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x65,
	0x65, 0x6b, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65,
	0x65, 0x6b, 0x45, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x78,
	0x70, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x58, 0x70, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x2b, 0x0a,
	0x11, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x65,
	0x77, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x4c,
	0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x73, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x64, 0x12, 0x26,
	0x0a, 0x0f, 0x6d, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x6f, 0x73, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x44, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd8, 0x02, 0x0a, 0x0f, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c,
	0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x78, 0x70, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x58, 0x70, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x64,
	0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x6e, 0x65, 0x77, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x57, 0x6f, 0x72,
	0x64, 0x73, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x70, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x63, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65,
	0x64, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x6d, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x64, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x6d, 0x6f, 0x73, 0x74, 0x49, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xaa, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb4, 0x01,
	0x0a, 0x0b, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12,
	0x0e, 0x0a, 0x02, 0x78, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x78, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xf1, 0x02, 0x0a, 0x05, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x33, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x4e, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x68, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x68, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x63,
	0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x6c,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xce, 0x03, 0x0a, 0x09, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61,
	0x63, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61,
	0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x52, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x6d,
	0x6f, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6d, 0x6f, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x72, 0x6f,
	0x6e, 0x67, 0x65, 0x73, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x32, 0x0a, 0x0c, 0x47, 0x6f, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x67, 0x6f, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x04, 0x67, 0x6f, 0x61, 0x6c, 0x22, 0x50, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x6f, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x67,
	0x6f, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x04, 0x67, 0x6f, 0x61, 0x6c, 0x22,
	0x5a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x10,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x0e, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x0d, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x41, 0x0a, 0x0f, 0x77, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x2e, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x0e, 0x77, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x44, 0x0a, 0x10, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x5f, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c,
	0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x15, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x4e, 0x0a, 0x16, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x50, 0x0a, 0x17, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68,
	0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x51, 0x0a, 0x14, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0c,
	0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x41, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x61, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x55, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x50,
	0x0a, 0x13, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x52, 0x0c, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73,
	0x22, 0x50, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x39, 0x0a, 0x0e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x22, 0x35, 0x0a,
	0x0d, 0x47, 0x6f, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24,
	0x0a, 0x05, 0x67, 0x6f, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x05, 0x67,
	0x6f, 0x61, 0x6c, 0x73, 0x22, 0x54, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x49, 0x0a, 0x12, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47,
	0x6f, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x6f,
	0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x6f, 0x61,
	0x6c, 0x49, 0x64, 0x32, 0x86, 0x07, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x47, 0x6f,
	0x61, 0x6c, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x6f,
	0x61, 0x6c, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x6f,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b,
	0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e,
	0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x2e, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x47, 0x6f, 0x61, 0x6c, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x6f, 0x61,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e,
	0x47, 0x6f, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0c, 0x5a, 0x0a,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_progres_proto_rawDescOnce sync.Once
	file_progres_proto_rawDescData = file_progres_proto_rawDesc
)

func file_progres_proto_rawDescGZIP() []byte {
	file_progres_proto_rawDescOnce.Do(func() {
		file_progres_proto_rawDescData = protoimpl.X.CompressGZIP(file_progres_proto_rawDescData)
	})
	return file_progres_proto_rawDescData
}

var file_progres_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_progres_proto_goTypes = []any{
	(*Goal)(nil),                       // 0: progress.Goal
	(*DailyProgress)(nil),              // 1: progress.DailyProgress
	(*WeeklyProgress)(nil),             // 2: progress.WeeklyProgress
	(*MonthlyProgress)(nil),            // 3: progress.MonthlyProgress
	(*Achievement)(nil),                // 4: progress.Achievement
	(*Leaderboard)(nil),                // 5: progress.Leaderboard
	(*Skill)(nil),                      // 6: progress.Skill
	(*Statistic)(nil),                  // 7: progress.Statistic
	(*GoalResponse)(nil),               // 8: progress.GoalResponse
	(*UpdateGoalRequest)(nil),          // 9: progress.UpdateGoalRequest
	(*GetLanguageProgressRequest)(nil), // 10: progress.GetLanguageProgressRequest
	(*ProgressResponse)(nil),           // 11: progress.ProgressResponse
	(*GetUserRequest)(nil),             // 12: progress.GetUserRequest
	(*DailyProgressResponse)(nil),      // 13: progress.DailyProgressResponse
	(*WeeklyProgressResponse)(nil),     // 14: progress.WeeklyProgressResponse
	(*MonthlyProgressResponse)(nil),    // 15: progress.MonthlyProgressResponse
	(*AchievementsResponse)(nil),       // 16: progress.AchievementsResponse
	(*GetLeaderboardRequest)(nil),      // 17: progress.GetLeaderboardRequest
	(*LeaderboardResponse)(nil),        // 18: progress.LeaderboardResponse
	(*GetSkillsRequest)(nil),           // 19: progress.GetSkillsRequest
	(*SkillsResponse)(nil),             // 20: progress.SkillsResponse
	(*GoalsResponse)(nil),              // 21: progress.GoalsResponse
	(*GetStatisticsRequest)(nil),       // 22: progress.GetStatisticsRequest
	(*StatisticsResponse)(nil),         // 23: progress.StatisticsResponse
	(*DeleteGoalRequest)(nil),          // 24: progress.DeleteGoalRequest
}
var file_progres_proto_depIdxs = []int32{
	0,  // 0: progress.GoalResponse.goal:type_name -> progress.Goal
	0,  // 1: progress.UpdateGoalRequest.goal:type_name -> progress.Goal
	1,  // 2: progress.ProgressResponse.daily_progress:type_name -> progress.DailyProgress
	2,  // 3: progress.ProgressResponse.weekly_progress:type_name -> progress.WeeklyProgress
	3,  // 4: progress.ProgressResponse.monthly_progress:type_name -> progress.MonthlyProgress
	1,  // 5: progress.DailyProgressResponse.progress:type_name -> progress.DailyProgress
	2,  // 6: progress.WeeklyProgressResponse.progress:type_name -> progress.WeeklyProgress
	3,  // 7: progress.MonthlyProgressResponse.progress:type_name -> progress.MonthlyProgress
	4,  // 8: progress.AchievementsResponse.achievements:type_name -> progress.Achievement
	5,  // 9: progress.LeaderboardResponse.leaderboards:type_name -> progress.Leaderboard
	6,  // 10: progress.SkillsResponse.skills:type_name -> progress.Skill
	0,  // 11: progress.GoalsResponse.goals:type_name -> progress.Goal
	7,  // 12: progress.StatisticsResponse.statistics:type_name -> progress.Statistic
	0,  // 13: progress.ProgressService.SetGoal:input_type -> progress.Goal
	9,  // 14: progress.ProgressService.UpdateGoal:input_type -> progress.UpdateGoalRequest
	10, // 15: progress.ProgressService.GetLanguageProgress:input_type -> progress.GetLanguageProgressRequest
	12, // 16: progress.ProgressService.GetDailyProgress:input_type -> progress.GetUserRequest
	12, // 17: progress.ProgressService.GetWeeklyProgress:input_type -> progress.GetUserRequest
	12, // 18: progress.ProgressService.GetMonthlyProgress:input_type -> progress.GetUserRequest
	12, // 19: progress.ProgressService.GetAchievements:input_type -> progress.GetUserRequest
	17, // 20: progress.ProgressService.GetLeaderboard:input_type -> progress.GetLeaderboardRequest
	19, // 21: progress.ProgressService.GetSkills:input_type -> progress.GetSkillsRequest
	12, // 22: progress.ProgressService.GetGoals:input_type -> progress.GetUserRequest
	22, // 23: progress.ProgressService.GetStatistics:input_type -> progress.GetStatisticsRequest
	24, // 24: progress.ProgressService.DeleteGoal:input_type -> progress.DeleteGoalRequest
	8,  // 25: progress.ProgressService.SetGoal:output_type -> progress.GoalResponse
	8,  // 26: progress.ProgressService.UpdateGoal:output_type -> progress.GoalResponse
	11, // 27: progress.ProgressService.GetLanguageProgress:output_type -> progress.ProgressResponse
	13, // 28: progress.ProgressService.GetDailyProgress:output_type -> progress.DailyProgressResponse
	14, // 29: progress.ProgressService.GetWeeklyProgress:output_type -> progress.WeeklyProgressResponse
	15, // 30: progress.ProgressService.GetMonthlyProgress:output_type -> progress.MonthlyProgressResponse
	16, // 31: progress.ProgressService.GetAchievements:output_type -> progress.AchievementsResponse
	18, // 32: progress.ProgressService.GetLeaderboard:output_type -> progress.LeaderboardResponse
	20, // 33: progress.ProgressService.GetSkills:output_type -> progress.SkillsResponse
	21, // 34: progress.ProgressService.GetGoals:output_type -> progress.GoalsResponse
	23, // 35: progress.ProgressService.GetStatistics:output_type -> progress.StatisticsResponse
	8,  // 36: progress.ProgressService.DeleteGoal:output_type -> progress.GoalResponse
	25, // [25:37] is the sub-list for method output_type
	13, // [13:25] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_progres_proto_init() }
func file_progres_proto_init() {
	if File_progres_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_progres_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Goal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*DailyProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*WeeklyProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*MonthlyProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Achievement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Leaderboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Skill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Statistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GoalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateGoalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetLanguageProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*DailyProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*WeeklyProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*MonthlyProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*AchievementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetLeaderboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*LeaderboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetSkillsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*SkillsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GoalsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GetStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*StatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_progres_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteGoalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_progres_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_progres_proto_goTypes,
		DependencyIndexes: file_progres_proto_depIdxs,
		MessageInfos:      file_progres_proto_msgTypes,
	}.Build()
	File_progres_proto = out.File
	file_progres_proto_rawDesc = nil
	file_progres_proto_goTypes = nil
	file_progres_proto_depIdxs = nil
}
