version: '3.9'

services:

  migrate:
    image: migrate/migrate
    networks:
      - GLhost
    volumes:
      - ./migrations:/migrations
    command: [ "-path", "/migrations", "-database",  
                "postgres://postgres:root@post-db:5432/learning_db?sslmode=disable", 
                "up" ]
    depends_on:
      - postgres-db

  # Postgres Database
  postgres-db:
    container_name: post-db
    image: postgres:latest
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: root
      # PGDATA: /data/postgres
      POSTGRES_DB: learning_db
    volumes:
      - db:/post-database/post-memory
    ports:
      - "5434:5432"
    networks:
      - GLhost
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
  
  # MongoDB Database
  mongodb:
    container_name: mongo-db
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    volumes:
      - mongo-data:/data/db
    ports:
      - "27018:27017"
    networks:
      - GLhost
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mongo --eval 'db.runCommand({ ping: 1 })'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # learning-service
  learning-service:
    container_name: learning-service-cont
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres-db
    ports:
      - "50020:50020"
    networks:
      - GLhost

# Docker Networks
networks:
  GLhost:
    external: true
    name: global-network
    driver: bridge

# Docker Volumes
volumes:
  db:
  mongo-data:
